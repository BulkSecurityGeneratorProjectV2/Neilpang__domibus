<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1c29d1fb-f8ae-4ddb-ac43-1469a15001ec" activeEnvironment="Default" name="TESTS_JMS" resourceRoot="" soapui-version="5.1.2-m-SNAPSHOT" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="9581111c-248c-4085-bf9f-dc452577042f" wsaVersion="NONE" name="BackendService_1_1SoapBinding" type="wsdl" bindingName="{http://org.ecodex.backend/1_1/}BackendService_1_1SoapBinding" soapVersion="1_2" anonymous="optional" definition="http://localhost:8080/domibus/services/backend?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/domibus/services/backend?wsdl"><con:part><con:url>http://localhost:8080/domibus/services/backend?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="BackendService_1_1" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://org.ecodex.backend/1_1/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:attribute name="lang" type="xs:string"/>
    </xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/05/xmlmime">
      <xs:complexType name="base64Binary">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute ref="tns:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="hexBinary">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute ref="tns:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:attribute name="contentType" type="xs:string"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.w3.org/2003/05/soap-envelope" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2003/05/soap-envelope" xmlns:S12="http://www.w3.org/2003/05/soap-envelope">
      <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xs:element name="Body" type="tns:Body"/>
      <xs:element name="Envelope" type="tns:Envelope"/>
      <xs:element name="Fault" type="tns:Fault"/>
      <xs:element name="Header" type="tns:Header"/>
      <xs:element name="NotUnderstood" type="tns:NotUnderstoodType"/>
      <xs:element name="Upgrade" type="tns:UpgradeType"/>
      <xs:complexType name="NotUnderstoodType">
        <xs:sequence/>
        <xs:attribute name="qname" type="xs:QName" use="required"/>
      </xs:complexType>
      <xs:complexType name="SupportedEnvType">
        <xs:sequence/>
        <xs:attribute name="qname" type="xs:QName" use="required"/>
      </xs:complexType>
      <xs:complexType name="Envelope">
        <xs:sequence>
          <xs:element minOccurs="0" name="Header" type="tns:Header"/>
          <xs:element name="Body" type="tns:Body"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Header">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Body">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="UpgradeType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="SupportedEnvelope" type="tns:SupportedEnvType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="faultcode">
        <xs:sequence>
          <xs:element name="Value" type="xs:QName"/>
          <xs:element minOccurs="0" name="Subcode" type="tns:subcode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subcode">
        <xs:sequence>
          <xs:element name="Value" type="xs:QName"/>
          <xs:element minOccurs="0" name="Subcode" type="tns:subcode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reasontext">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute ref="xml:lang" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="faultreason">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="Text" type="tns:reasontext"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="detail">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Fault">
        <xs:sequence>
          <xs:element name="Code" type="tns:faultcode"/>
          <xs:element name="Reason" type="tns:faultreason"/>
          <xs:element minOccurs="0" name="Node" type="xs:anyURI"/>
          <xs:element minOccurs="0" name="Role" type="xs:anyURI"/>
          <xs:element minOccurs="0" name="Detail" type="tns:detail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:attribute name="mustUnderstand" type="xs:boolean"/>
    </xs:schema>
    <xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:S11="http://schemas.xmlsoap.org/soap/envelope/">
      <xs:element name="Body" type="tns:Body"/>
      <xs:element name="Envelope" type="tns:Envelope"/>
      <xs:element name="Fault" type="tns:Fault"/>
      <xs:element name="Header" type="tns:Header"/>
      <xs:complexType name="Envelope">
        <xs:sequence>
          <xs:element form="qualified" minOccurs="0" name="Header" type="tns:Header"/>
          <xs:element form="qualified" name="Body" type="tns:Body"/>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Header">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Body">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="detail">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Fault">
        <xs:sequence>
          <xs:element name="faultcode" type="xs:QName"/>
          <xs:element name="faultstring" type="xs:string"/>
          <xs:element minOccurs="0" name="faultactor" type="xs:anyURI"/>
          <xs:element minOccurs="0" name="detail" type="tns:detail"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.w3.org/2005/05/xmlmime">
      <xs:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xs:element name="FaultDetail">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="code" type="xs:string"/>
            <xs:element name="message" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadMessageRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadMessageResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bodyload" type="tns:PayloadType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:PayloadType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listPendingMessagesRequest" type="xs:anyType"/>
      <xs:element name="listPendingMessagesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="messageErrorsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="messageStatusRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bodyload" type="tns:PayloadType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:PayloadType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRequestURL">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bodyload" type="tns:PayloadURLType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:PayloadURLType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="PayloadType">
        <xs:simpleContent>
          <xs:extension base="ns1:base64Binary">
            <xs:attribute name="payloadId" type="xs:token" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="errorResultImpl">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element minOccurs="0" name="errorDetail" type="xs:string"/>
          <xs:element minOccurs="0" name="messageInErrorId" type="xs:string"/>
          <xs:element minOccurs="0" name="mshRole" type="tns:mshRole"/>
          <xs:element minOccurs="0" name="notified" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayloadURLType">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="payloadId" type="xs:token" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="messageStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="READY_TO_SEND"/>
          <xs:enumeration value="SEND_ENQUEUED"/>
          <xs:enumeration value="SEND_IN_PROGRESS"/>
          <xs:enumeration value="WAITING_FOR_RECEIPT"/>
          <xs:enumeration value="ACKNOWLEDGED"/>
          <xs:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
          <xs:enumeration value="SEND_ATTEMPT_FAILED"/>
          <xs:enumeration value="SEND_FAILURE"/>
          <xs:enumeration value="NOT_FOUND"/>
          <xs:enumeration value="WAITING_FOR_RETRY"/>
          <xs:enumeration value="RECEIVED"/>
          <xs:enumeration value="RECEIVED_WITH_WARNINGS"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EBMS_0001"/>
          <xs:enumeration value="EBMS_0002"/>
          <xs:enumeration value="EBMS_0003"/>
          <xs:enumeration value="EBMS_0004"/>
          <xs:enumeration value="EBMS_0005"/>
          <xs:enumeration value="EBMS_0006"/>
          <xs:enumeration value="EBMS_0007"/>
          <xs:enumeration value="EBMS_0008"/>
          <xs:enumeration value="EBMS_0009"/>
          <xs:enumeration value="EBMS_0010"/>
          <xs:enumeration value="EBMS_0011"/>
          <xs:enumeration value="EBMS_0101"/>
          <xs:enumeration value="EBMS_0102"/>
          <xs:enumeration value="EBMS_0103"/>
          <xs:enumeration value="EBMS_0201"/>
          <xs:enumeration value="EBMS_0202"/>
          <xs:enumeration value="EBMS_0301"/>
          <xs:enumeration value="EBMS_0302"/>
          <xs:enumeration value="EBMS_0303"/>
          <xs:enumeration value="EBMS_0020"/>
          <xs:enumeration value="EBMS_0021"/>
          <xs:enumeration value="EBMS_0022"/>
          <xs:enumeration value="EBMS_0023"/>
          <xs:enumeration value="EBMS_0030"/>
          <xs:enumeration value="EBMS_0031"/>
          <xs:enumeration value="EBMS_0040"/>
          <xs:enumeration value="EBMS_0041"/>
          <xs:enumeration value="EBMS_0042"/>
          <xs:enumeration value="EBMS_0043"/>
          <xs:enumeration value="EBMS_0044"/>
          <xs:enumeration value="EBMS_0045"/>
          <xs:enumeration value="EBMS_0046"/>
          <xs:enumeration value="EBMS_0047"/>
          <xs:enumeration value="EBMS_0048"/>
          <xs:enumeration value="EBMS_0049"/>
          <xs:enumeration value="EBMS_0050"/>
          <xs:enumeration value="EBMS_0051"/>
          <xs:enumeration value="EBMS_0052"/>
          <xs:enumeration value="EBMS_0053"/>
          <xs:enumeration value="EBMS_0054"/>
          <xs:enumeration value="EBMS_0055"/>
          <xs:enumeration value="EBMS_0060"/>
          <xs:enumeration value="EBMS_0065"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="mshRole">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SENDING"/>
          <xs:enumeration value="RECEIVING"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="errorResultImplArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:errorResultImpl"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getStatusRequest" nillable="true">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessageStatusResponse" nillable="true" type="tns:messageStatus"/>
      <xs:element name="getErrorsRequest" nillable="true">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessageErrorsResponse" nillable="true" type="tns:errorResultImplArray"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:ns1="http://www.w3.org/2003/05/soap-envelope" xmlns:eb="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
      <xs:import namespace="http://www.w3.org/2003/05/soap-envelope"/>
      <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xs:element name="Messaging" type="tns:Messaging"/>
      <xs:element name="UserMessage" type="tns:UserMessage"/>
      <xs:complexType name="Messaging">
        <xs:sequence>
          <xs:element minOccurs="0" name="SignalMessage" type="tns:SignalMessage"/>
          <xs:element minOccurs="0" name="UserMessage" type="tns:UserMessage"/>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute ref="ns1:mustUnderstand"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="SignalMessage">
        <xs:sequence>
          <xs:element name="MessageInfo" type="tns:MessageInfo"/>
          <xs:element minOccurs="0" name="PullRequest" type="tns:PullRequest"/>
          <xs:element minOccurs="0" name="Receipt" type="tns:Receipt"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Error" type="tns:Error"/>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageInfo">
        <xs:sequence>
          <xs:element name="Timestamp" type="xs:dateTime"/>
          <xs:element name="MessageId" type="xs:string"/>
          <xs:element minOccurs="0" name="RefToMessageId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PullRequest">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute name="mpc" type="xs:anyURI"/>
        <xs:anyAttribute namespace="##other" processContents="skip"/>
      </xs:complexType>
      <xs:complexType name="Service">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="PartyId">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="Schema">
        <xs:sequence/>
        <xs:attribute name="location" type="xs:anyURI" use="required"/>
        <xs:attribute name="version" type="xs:string"/>
        <xs:attribute name="namespace" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="To">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="PartyId" type="tns:PartyId"/>
          <xs:element default="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultRole" name="Role" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Error">
        <xs:sequence>
          <xs:element minOccurs="0" name="Description" type="tns:Description"/>
          <xs:element minOccurs="0" name="ErrorDetail" type="xs:token"/>
        </xs:sequence>
        <xs:attribute name="category" type="xs:token"/>
        <xs:attribute name="refToMessageInError" type="xs:token"/>
        <xs:attribute name="errorCode" type="xs:token" use="required"/>
        <xs:attribute name="origin" type="xs:token"/>
        <xs:attribute name="severity" type="xs:token" use="required"/>
        <xs:attribute name="shortDescription" type="xs:token"/>
      </xs:complexType>
      <xs:complexType name="Description">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute ref="xml:lang" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="Receipt">
        <xs:sequence>
          <xs:any namespace="##other" processContents="skip"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CollaborationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="AgreementRef" type="tns:AgreementRef"/>
          <xs:element name="Service" type="tns:Service"/>
          <xs:element name="Action" type="xs:token"/>
          <xs:element name="ConversationId" type="xs:token"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AgreementRef">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" type="xs:string"/>
            <xs:attribute name="pmode" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="MessageProperties">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="type" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="From">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="PartyId" type="tns:PartyId"/>
          <xs:element default="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultRole" name="Role" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartProperties">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartyInfo">
        <xs:sequence>
          <xs:element name="From" type="tns:From"/>
          <xs:element name="To" type="tns:To"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PayloadInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="PartInfo" type="tns:PartInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="Schema" type="tns:Schema"/>
          <xs:element minOccurs="0" name="Description" type="tns:Description"/>
          <xs:element minOccurs="0" name="PartProperties" type="tns:PartProperties"/>
        </xs:sequence>
        <xs:attribute name="href" type="xs:token"/>
      </xs:complexType>
      <xs:complexType name="UserMessage">
        <xs:sequence>
          <xs:element name="MessageInfo" type="tns:MessageInfo"/>
          <xs:element name="PartyInfo" type="tns:PartyInfo"/>
          <xs:element name="CollaborationInfo" type="tns:CollaborationInfo"/>
          <xs:element minOccurs="0" name="MessageProperties" type="tns:MessageProperties"/>
          <xs:element minOccurs="0" name="PayloadInfo" type="tns:PayloadInfo"/>
        </xs:sequence>
        <xs:attribute name="mpc" type="xs:anyURI"/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getMessageErrors">
    <wsdl:part element="tns:getErrorsRequest" name="getErrorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadMessage">
    <wsdl:part element="tns:downloadMessageRequest" name="downloadMessageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DownloadMessageFault">
    <wsdl:part element="tns:FaultDetail" name="DownloadMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadMessageResponse">
    <wsdl:part element="tns:downloadMessageResponse" name="downloadMessageResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessagesResponse">
    <wsdl:part element="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatusResponse">
    <wsdl:part element="tns:getMessageStatusResponse" name="getMessageStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessages">
    <wsdl:part element="tns:listPendingMessagesRequest" name="listPendingMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageStatus">
    <wsdl:part element="tns:getStatusRequest" name="getStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessageResponse">
    <wsdl:part element="tns:sendResponse" name="sendResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendMessage">
    <wsdl:part element="tns:sendRequest" name="sendRequest"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendMessageFault">
    <wsdl:part element="tns:FaultDetail" name="SendMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrorsResponse">
    <wsdl:part element="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BackendInterface">
    <wsdl:operation name="sendMessage">
      <wsdl:input message="tns:sendMessage" name="sendMessage"></wsdl:input>
      <wsdl:output message="tns:sendMessageResponse" name="sendMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:SendMessageFault" name="SendMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatus">
      <wsdl:input message="tns:getMessageStatus" name="getMessageStatus"></wsdl:input>
      <wsdl:output message="tns:getMessageStatusResponse" name="getMessageStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listPendingMessages">
      <wsdl:input message="tns:listPendingMessages" name="listPendingMessages"></wsdl:input>
      <wsdl:output message="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <wsdl:input message="tns:getMessageErrors" name="getMessageErrors"></wsdl:input>
      <wsdl:output message="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadMessage" parameterOrder="downloadMessageRequest downloadMessageResponse ebMSHeaderInfo">
      <wsdl:input message="tns:downloadMessage" name="downloadMessage"></wsdl:input>
      <wsdl:output message="tns:downloadMessageResponse" name="downloadMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:DownloadMessageFault" name="DownloadMessageFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BackendService_1_1SoapBinding" type="tns:BackendInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="sendMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="sendMessage">
        <soap12:header message="tns:sendMessage" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="sendRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SendMessageFault">
        <soap12:fault name="SendMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageErrors">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageErrorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listPendingMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPendingMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPendingMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="downloadMessage">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadMessageResponse">
        <soap12:header message="tns:downloadMessageResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="downloadMessageResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DownloadMessageFault">
        <soap12:fault name="DownloadMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BackendService_1_1">
    <wsdl:port binding="tns:BackendService_1_1SoapBinding" name="BACKEND_PORT">
      <soap12:address location="http://localhost:8080/domibus/services/backend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/domibus/services/backend</con:endpoint></con:endpoints><con:operation id="dc567009-e72d-4167-9ec7-fe2ac1738684" isOneWay="false" action="" name="downloadMessage" bindingOperationName="downloadMessage" type="Request-Response" outputName="downloadMessageResponse" inputName="downloadMessage" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="767cb481-8b7d-45ef-957f-e823696a27be" isOneWay="false" action="" name="getMessageErrors" bindingOperationName="getMessageErrors" type="Request-Response" outputName="getMessageErrorsResponse" inputName="getMessageErrors" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95ae55fb-b5a3-4575-94c9-44c3dedf1981" isOneWay="false" action="" name="getMessageStatus" bindingOperationName="getMessageStatus" type="Request-Response" outputName="getMessageStatusResponse" inputName="getMessageStatus" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3563058-db2b-4135-a5e0-ddcfb8386683" isOneWay="false" action="" name="listPendingMessages" bindingOperationName="listPendingMessages" type="Request-Response" outputName="listPendingMessagesResponse" inputName="listPendingMessages" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3fe9115c-da9f-495b-90c5-4efabf0c9fa2" isOneWay="false" action="" name="sendMessage" bindingOperationName="sendMessage" type="Request-Response" outputName="sendMessageResponse" inputName="sendMessage" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="aa1cfbec-dd7a-433f-af0c-5a2b5f7170d5" name="Administration"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clean Database" searchProperties="true" id="d5b6ea15-c3c6-4356-83de-7f9bf1a1248c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All" id="6c74f07e-6da7-4447-ae25-51f802331812"><con:settings/><con:config><script>def test = new Domibus(log,null,context);
test.cleanDatabaseAll();
test.finalize();

</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="e17c4543-f73c-41bf-af7a-4e67d0878b87" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add or change Teardown script" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddToTearDown" id="3e364433-d358-424b-9d18-6fea08b81bd7"><con:settings/><con:config><script>def lineToAdd = "ExcelReporting.reportTestCase(testRunner, log)"
log.info "START: Amendment tear down sciprts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def td = testCase.getTearDownScript()
  		if (td == null) 
  		{
  			testCase.setTearDownScript(lineToAdd)
  		}
  		else if(!td.contains("ExcelReporting.reportTestCase")) {
  			def newTearDown = td + System.getProperty("line.separator") + lineToAdd
  			testCase.setTearDownScript(newTearDown)
  		}
 	}
 }
log.info "END: Amendment tear down sciprts"
</script></con:config></con:testStep><con:testStep type="groovy" name="ReplaceTearDownLine" id="8c1c0eb5-fce0-4361-9cae-51e253bf1a8b"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
def oldLineToBeChanged = /(?&lt;!\/)ExcelReporting.reportTestCase/

def newLineToBeChanged = "//ExcelReporting.reportTestCase"

log.info "START: Amend tear down scripts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def tdScript = testCase.getTearDownScript()
  		if (tdScript != null) {			
  			testCase.setTearDownScript( tdScript.replaceAll(oldLineToBeChanged, newLineToBeChanged) )
  		}
 	}
 }</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase id="345e9590-4a08-4389-8097-a75429e3ad63" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start default configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Start Blue and Red" id="7c98a92a-048f-4506-b397-07ae4d42c73e"><con:settings/><con:config><script>Domibus.startMSH("sender", context, log);
Domibus.startMSH("receiver", context, log);
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="97ef235b-6691-443d-87f0-b0e2f0d89c8c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="httprequest" name="Upload P-Mode blue default" id="cfc39d54-2c34-4cca-91c1-ba193f65c210"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7d8d7688-62d8-485a-9855-44e191f83832" name="Upload P-Mode blue default" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadPmodeFile</con:endpoint><con:request/><con:assertion type="Simple Contains" id="8749654b-1ee8-45da-8cec-2a1ecee56828" name="Contains"><con:configuration><token>PMode file has been successfully uploaded</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="51edc8a0-5041-497e-9abd-1377274bf503" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>domibus-gw-sample-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>pmode</con:contentId><con:url>${#Project#defaultPModesPath}/blue/domibus-gw-sample-pmode-blue.xml</con:url><con:id>452ff68f-c6fb-4006-9ffd-15741474dc99</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Upload P-Mode red default" id="dce02424-dbb3-4348-a809-32b4f8af4e0b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7d8d7688-62d8-485a-9855-44e191f83832" name="Upload P-Mode red default" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#remoteUrl}/home/uploadPmodeFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e8d073e0-a5e8-4934-a3c4-fce5cf677033" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ee0a9716-f73d-41f3-90b3-1cba230211c1" name="Contains"><con:configuration><token>PMode file has been successfully uploaded</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>domibus-gw-sample-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>pmode</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#defaultPModesPath}/red/domibus-gw-sample-pmode-red.xml</con:url><con:id>2836aa1f-ae95-4661-a5f8-a2c598bbbe8e</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Upload keystore blue default" id="21313fd8-7520-4a73-8fc3-3c10bdf08d08"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Upload keystore blue default" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e4604d4b-7e98-4621-89f0-a412aa38c723" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c88bcac2-185f-4d9e-9c3d-17e0f66703d7" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#defaultPModesPath}/blue/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Upload keystore red default" id="1219a664-0bee-4e12-a41b-37e96921686a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Upload keystore red default" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#remoteUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="970a3313-ddee-463b-af9d-62508a0fbca0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a2555732-8579-4aca-85c6-3e0b9fc6fa76" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#defaultPModesPath}/red/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update Message Filter on blue To Jms" id="04336559-b15a-4b83-8eff-b26ab9b878e0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfa93119-5c7e-4a91-859d-4de94b246f24" name="Update Message Filter on blue To Jms" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}/home/messagefilter</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="933ea433-d501-4a4f-aa8f-a6c1f95159ea" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="17919e6c-0b28-4bf5-a8b3-9f92f5118deb" name="Contains"><con:configuration><token>Filters updated</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>backends</con:name><con:value>Jms</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>backends</con:name><con:value>backendWebservice</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update Message Filter on red To Jms" id="14e8b88e-4886-4272-b64e-bf825933e405"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfa93119-5c7e-4a91-859d-4de94b246f24" name="Update Message Filter on red To Jms" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#remoteUrl}/home/messagefilter</con:endpoint><con:request/><con:assertion type="Simple Contains" id="c906ca68-35ee-4588-8098-aa81b4f1e7ad" name="Contains"><con:configuration><token>Filters updated</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="20b3f5b6-1bb1-4638-acaa-a269513ff267" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>backends</con:name><con:value>Jms</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>backends</con:name><con:value>backendWebservice</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/></con:testCase><con:testCase id="95e59973-5ed1-444f-870d-fa9c15f35c98" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start 3 gateways configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Start gateways" id="5f3b8ff7-d3c2-42b9-b81a-a98bb5936548"><con:settings/><con:config><script>Domibus.startMSH("sender", context, log);
Domibus.startMSH("receiver", context, log);
Domibus.startMSH("receivergreen", context, log);
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4b9006a0-2454-4f2d-99a6-ef1810201a3d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="httprequest" name="Upload P-Mode blue swedish" id="c4aba088-64a4-4b68-8225-8cf920ba683b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7d8d7688-62d8-485a-9855-44e191f83832" name="Upload P-Mode blue swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadPmodeFile</con:endpoint><con:request/><con:assertion type="Simple Contains" id="8749654b-1ee8-45da-8cec-2a1ecee56828" name="Contains"><con:configuration><token>PMode file has been successfully uploaded</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="51edc8a0-5041-497e-9abd-1377274bf503" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>domibus-gw-sample-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>pmode</con:contentId><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/blue/domibus-gw-sample-pmode-blue.xml</con:url><con:id>452ff68f-c6fb-4006-9ffd-15741474dc99</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Upload P-Mode red swedish" id="dd2f0255-9fbf-4fd5-9f8d-3bc30143eaa4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7d8d7688-62d8-485a-9855-44e191f83832" name="Upload P-Mode red swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#remoteUrl}/home/uploadPmodeFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e8d073e0-a5e8-4934-a3c4-fce5cf677033" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ee0a9716-f73d-41f3-90b3-1cba230211c1" name="Contains"><con:configuration><token>PMode file has been successfully uploaded</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>domibus-gw-sample-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>pmode</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/red/domibus-gw-sample-pmode-red.xml</con:url><con:id>2836aa1f-ae95-4661-a5f8-a2c598bbbe8e</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Upload P-Mode green swedish" id="779e2d9c-adfb-44f8-bec3-1fadd79538de"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7d8d7688-62d8-485a-9855-44e191f83832" name="Upload P-Mode green swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#greenUrl}/home/uploadpmodefile</con:endpoint><con:request/><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>domibus-gw-sample-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>pmode</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/green/PMode-domibus-green.xml</con:url><con:id>2836aa1f-ae95-4661-a5f8-a2c598bbbe8e</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Upload keystore blue swedish" id="f1fb0400-2e47-487a-af61-e0c7ea5e7d67"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Upload keystore blue swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e4604d4b-7e98-4621-89f0-a412aa38c723" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c88bcac2-185f-4d9e-9c3d-17e0f66703d7" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/blue/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Upload keystore red swedish" id="1bd5517f-10b5-4d90-bd03-45b993d6ab03"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Upload keystore red swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#remoteUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="970a3313-ddee-463b-af9d-62508a0fbca0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a2555732-8579-4aca-85c6-3e0b9fc6fa76" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/red/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Upload keystore green swedish" id="2d533364-0c89-4526-ab37-4c725ba8d50e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Upload keystore green swedish" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#greenUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="970a3313-ddee-463b-af9d-62508a0fbca0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a2555732-8579-4aca-85c6-3e0b9fc6fa76" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/ThreegatewaysTestsPModesandKeystores/green/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update Message Filter on blue To Jms" id="d5e4be77-2b1b-4d4b-9c87-38a54e7c4dfd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfa93119-5c7e-4a91-859d-4de94b246f24" name="Update Message Filter on blue To Jms" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}/home/messagefilter</con:endpoint><con:request/><con:assertion type="Simple Contains" id="28a7eab3-f112-4a40-b399-404bce46a802" name="Contains"><con:configuration><token>Filters updated</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="eb28ceb6-1093-44bd-a751-7461fcb328cb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>backends</con:name><con:value>Jms</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>backends</con:name><con:value>backendWebservice</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update Message Filter on red To Jms" id="8175c24e-593e-4a30-abc5-0d41063929b3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfa93119-5c7e-4a91-859d-4de94b246f24" name="Update Message Filter on red To Jms" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#remoteUrl}/home/messagefilter</con:endpoint><con:request/><con:assertion type="Simple Contains" id="6a00dced-3e7d-4ee3-91d9-635d9b44ceb9" name="Contains"><con:configuration><token>Filters updated</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="2b4a482b-ca17-419b-ae20-3f8690cf9b4f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>backends</con:name><con:value>Jms</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>backends</con:name><con:value>backendWebservice</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update Message Filter on green To Jms" id="09b6b6be-b00c-4389-b82e-27407dd39c99"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfa93119-5c7e-4a91-859d-4de94b246f24" name="Update Message Filter on green To Jms" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#greenUrl}/home/messagefilter</con:endpoint><con:request/><con:assertion type="Simple Contains" id="a0de686d-b41f-4139-ab9d-3ecf81d290de" name="Contains"><con:configuration><token>Filters updated</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="24425afd-2aa9-42de-85e4-7ecf2f1b76cc" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>backends</con:name><con:value>Jms</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>backends</con:name><con:value>backendWebservice</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Dom001-Test Case only for checking reporting function" searchProperties="true" id="af8e4a35-9653-4e63-b2b6-d7aef7827425" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
            <con:settings/>
            <con:testStep type="request" name="Submit Message" id="70ab0c72-d40f-4a19-bfc3-7cc68831c197">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Submit Message" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c8a24d36-ed80-46f7-90dd-1c94f468ce2d" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context);
test.waitForStatus("ACKNOWLEDGED","RECEIVED");
test.finalize();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="request" name="Test Request" id="bad9a6ff-ce6a-464f-a1d3-5b4be22ac290" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>downloadMessage</con:operation><con:request name="Test Request" id="cb41a9c6-673e-462f-8379-d97950ffa55c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:downloadMessageRequest>\r
         <!--type: max255-non-empty-string-->\r
         <messageID>gero et</messageID>\r
      </_1:downloadMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77d2dada-1fab-47c0-b441-76c1fd9e9294"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Copy of Submit Message" id="9110cd33-cc43-4e43-9c0b-e0a774a10b4d">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Copy of Submit Message" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c8a24d36-ed80-46f7-90dd-1c94f468ce2d" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context);
test.waitForStatus("RECEIVED","RECEIVED");
test.finalize();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="9ec3f341-f59a-4d60-b50d-747fb9c2736a"><con:settings/><con:config><script>assert (1==1) </script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 1" id="c25cc1ad-1321-410a-aef9-11279fb4ffbd"><con:settings/><con:config><script>assert false : "It didn't work"</script></con:config></con:testStep><con:testStep type="request" name="Copy of Copy of Submit Message" id="fdd242a0-f45f-4cf2-9ded-81de987cf4b1">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Copy of Copy of Submit Message" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c8a24d36-ed80-46f7-90dd-1c94f468ce2d" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context);
test.waitForStatus("RECEIVED","RECEIVED");
test.finalize();</scriptText></con:configuration></con:assertion><con:assertion type="Not SOAP Fault Assertion" id="4fcbd953-53b3-4eba-93f9-e2ab51637300" name="SOAP Fault"/><con:assertion type="Invalid HTTP Status Codes" id="8633b9a6-a801-4b9b-b480-f20f58429bf3" name="Invalid HTTP Status Codes"><con:configuration><codes>999</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script" id="9feca5d4-9e24-4560-a796-da2f6a3c8ba6"><con:settings/><con:config><script>testRunner.cancel( "I'm getting tired" )</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5a4e3c2-ba87-481c-83e4-895685c23c11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>905c1ea0-a5b7-4f9b-9299-301e42aa217e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4756f893-b022-419a-a4a2-4c8faf31e0a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6391559-784a-4705-b0b1-3059936fe807</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e421f24b-f1c6-4ab6-be37-5b45a6806286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16886390-c49b-4574-ac54-28fe4ce6b20f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbe5183d-f059-4804-8409-61c4784987cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88d576ba-a790-4011-aa0a-a5042d1ae306</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="d96f6775-90be-4470-9cad-2f172c5ac7f3" name="PASSING TCs For Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS000-Clean Database" searchProperties="true" id="a762ae95-e616-4d06-a45f-3a1cc31da287">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All" id="e4d4e061-72ca-46d5-a01d-9a48f9acd1dc"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseAll()
test.finalize()</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS001-Submit Message-Basic Flow" searchProperties="true" id="fc5799aa-a012-4399-b831-0a12b65fa64c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="a3f6153f-14be-42c1-a4d3-9e1e3baf919d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61617");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");

String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2f5c64f8-1c41-46f5-bd21-8af357bbedaa" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS001-") // Message ID not set to fix value => test step disabled
test.finalize()
</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS001-")
test.finalize()

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS002-Submit Message-Basic Flow-Message with ID" searchProperties="true" id="9558f966-7239-4872-a43d-94d189a7cffa">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="6655fa5e-1b58-4e74-a95d-f7abc70c1786"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS002-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="86f2eb53-0037-4cb5-955e-6659c538e6bf"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS002-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS002-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS006-Submit Message-Exceptional flow-Data-Message ID-Unicity" searchProperties="true" id="dc332a5d-6d12-4a42-9127-c9f9b8edd2e2">
            <con:settings/>
            <con:testStep type="groovy" name="Submit Message 1" id="5b884e9e-8168-43ec-a800-c1e72d658f40"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS006-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Test 1" id="36f270ac-60cf-4343-beeb-264d81eb2c0d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS006-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="79af0a89-82d5-40dc-8246-f7524f20975f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS006-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="9a04f265-9f1d-4a32-a7ab-54f65dc0cbc8"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessageUnicity("-DomJMS006-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS006-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b884e9e-8168-43ec-a800-c1e72d658f40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>36f270ac-60cf-4343-beeb-264d81eb2c0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79af0a89-82d5-40dc-8246-f7524f20975f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9a04f265-9f1d-4a32-a7ab-54f65dc0cbc8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS007-Submit Message-messageType-Mandatory" searchProperties="true" id="029f46f6-a0cf-4390-8f23-3799927e8ac3">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="37e198e1-dfa8-4029-b368-6a66bd8aca6a"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

//messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS007-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e33b2c14-1317-451a-92c6-acbafda6e001"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS007-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS007-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS008-Submit Message-messageType-Value" searchProperties="true" id="861a3381-0336-4e29-b57a-96851b3afb36">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="2a674bf3-9a64-4110-9ac7-1f49e9f83607"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "pushMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS008-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="53b15681-87a6-4331-9a0f-f2e19e890173"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS007-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS008-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS009-Submit Message-action-Mandatory" searchProperties="true" id="ed7b90d2-099d-4589-a402-073208ac3a5b">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="599b64d4-0eaf-4423-8131-a66a9c28c9bd"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
//messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS009-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="92b0617e-9ca0-4c65-a139-f8368a230f62"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS009-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS009-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS012-Submit Message-Service-Mandatory" searchProperties="true" id="af9ddfda-e7d5-411e-832e-137cd658ecd8">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="1c3e0dfa-e884-4611-85cc-fce88642f871"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
//messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS012-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="54589ef5-c433-4a08-b140-42a146b67673"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS012-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS012-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS015-Submit Message-serviceType-Mandatory-service typed" searchProperties="true" id="61e68439-b6c1-4195-89f8-b812229c5108">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="bc2a1546-4dbb-4310-bf87-f220132faf76"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS015-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f67537c5-9868-4e9f-bdd5-739cfec81a8e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS015-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS015-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS017-Submit Message-conversationId" searchProperties="true" id="a6da06bb-13e5-471c-9cfa-94c8484c0fef">
            <con:description/><con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="337693e6-d01c-4439-9521-24ce098ee269"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-1-");
messageMap.setStringProperty("conversationId", "123");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="3b40bbed-e32e-4914-9233-835456ba5072"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61617");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-red");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-blue");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-2-");
messageMap.setStringProperty("conversationId", "123");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="d4fc8565-27c9-4dcc-b3fb-4d74a19e13f7"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS017-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e7784c62-0547-491e-bcb4-9ef8ce08227f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS017-1-");
test.verifyMessagePresence(1,1,"-DomJMS017-2-");
test.verifyMessagePresence(1,1,"-DomJMS017-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS017-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS018-Submit Message-refToMessageId" searchProperties="true" id="b269bea2-a476-4c60-9243-1194c2917a8c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7f2b120d-a1de-4e78-8f43-a2eb12d9962f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="1b53f14f-b937-44ea-bb18-588945aba02d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-2-");
messageMap.setStringProperty("refToMessageId", "-DomJMS018-1-");
 

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="14979a87-2d28-4d5d-ba07-f4f8f4f217e2"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS018-3-");
messageMap.setStringProperty("refToMessageId", "-random-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8a32d9c1-d3cf-4de7-a37e-61d51cbb549e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS018-1-");
test.verifyMessagePresence(1,1,"-DomJMS018-2-");
test.verifyMessagePresence(1,1,"-DomJMS018-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS018-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS024-Submit Message-fromRole-Mandatory" searchProperties="true" id="b774907c-36f5-45ff-bebb-daf5def6dfd3">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="5b9a2850-3b19-4fae-9cef-f7b6d011731d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS024-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="1296a5b0-a2bc-4847-9b70-f896c3bc1ce2"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS024-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="081f50bc-dd56-472c-97cb-9f33b4b0734f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS024-1-");
test.verifyMessagePresence(1,1,"-DomJMS024-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS024-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS025-Submit Message-fromRole-Empty" searchProperties="true" id="f34b97c7-c535-482a-b80d-4708083e62b6">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="8f706b81-2007-4f39-9051-4560579f097c"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "");
messageMap.setStringProperty("toRole", "");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS025-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="61ade91c-a290-4696-b9cd-49f844445ace"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS025-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS025-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS029-Submit Message-toRole-Empty" searchProperties="true" id="677a24ce-39c5-4678-80d4-995abe842797">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="43f3b0af-329d-4027-af3a-ec841e21aaf1"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "");
messageMap.setStringProperty("toRole", "");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS029-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b1c5df9f-f346-4adc-a3ad-7f7e5b993412"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS029-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS029-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS032-Submit Message-fromPartyId-Mandatory" searchProperties="true" id="03f2c2ba-8d78-4a2d-9085-fea9b24bd27e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7219a129-9105-41e9-99e1-cc191e56a7f6"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("Timestamp", "2016-01-10");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
//messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS032-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="842b17c4-7424-4ac1-b61a-a7f7dcb33e33"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS032-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="31fad918-2635-4b29-a203-b75395d5b0f0"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS032-1-");
test.verifyMessagePresence(1,1,"-DomJMS032-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS032-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS034-Submit Message-fromPartyType-Mandatory" searchProperties="true" id="c4d35fa8-e1c9-454c-933a-450563948f8a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="3c0e2f1d-edcc-415e-b042-41b0957f8403"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS034-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="ad8a930c-5007-4cca-9e54-2111a4cfe345"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS034-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1572ecc3-e254-4595-9a20-a92b9a3fb615"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS034-1-");
test.verifyMessagePresence(1,1,"-DomJMS034-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS034-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS036-Submit Message-toPartyId-Mandatory" searchProperties="true" id="4331b2d0-2f7d-4510-8c94-a7e6008c482a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="abee783a-b8e1-4b97-879e-c56b69eecea9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS036-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="5696ce65-c220-4e6f-8ddc-f9e44a7154fb"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS036-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="db4af41b-1ed0-40a9-9c22-d7cf2502bd90"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS036-1-");
test.verifyMessagePresence(1,1,"-DomJMS036-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS036-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS038-Submit Message-toPartyType-Mandatory" searchProperties="true" id="e3d9a697-672b-4bea-88e2-f32023918d69">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="472c1132-1d1e-4c8a-be4a-657343de72b7"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS038-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="c078a913-d810-4cca-a933-be56314c0c72"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS038-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="489513a7-9a19-4905-8acf-26af49c84fee"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS038-1-");
test.verifyMessagePresence(1,1,"-DomJMS038-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS038-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS044-Submit Message-totalNumberOfPayloads-Mandatory" searchProperties="true" id="4cdee9bb-8c7b-4a3b-a56c-489023533bda">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="be3d83f6-6e16-4c8e-a5d6-622cd4576105"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS044-1-");


//messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="2fba595e-6d2e-49a7-9daa-297c0d261f45"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS044-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="52a0394d-c0ea-412e-89c0-90daca8e1e6f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS044-1-");
test.verifyMessagePresence(1,1,"-DomJMS044-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS044-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS048-Submit Message-payload_contentId" searchProperties="true" id="ec8a55f1-b57d-4c64-812a-41cb4a8afcbb">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="b6547746-5130-4bf7-b4a1-9f894bdce5a0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:whatever");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="88bca6fa-a698-4109-989b-39fc9e31f5c5"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="987ee0d8-45ca-47c4-baab-5aa70cdcbbe6"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS048-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
//messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0806d416-9025-4e28-b2cc-cf884d7eab28"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS048-1-");
test.verifyMessagePresence(0,0,"-DomJMS048-2-");
test.verifyMessagePresence(0,0,"-DomJMS048-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS048-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="4e0191a1-8ef4-4c7c-b98e-cf5217d19398" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS050-Test Experience-Several payloads" searchProperties="true"><con:settings/><con:testStep type="request" name="Submit Message1" id="839f3079-d960-479e-b825-50faa179e077" disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Submit Message1" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/domibus/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
                <ns:PartInfo href="cid:attachment">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">application/octet-stream</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxoZWxsbz53b3JsZCAyPC9oZWxsbz4=</payload>
         <payload payloadId="cid:attachment">cid:1234</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="753e87d3-8dd2-4862-b385-4f1161093818" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context,'${#Project#jdbcUrl1}','${#Project#jdbcUrl2}','${#Project#driver}');
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED");
test.finalize();</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>europe.jpg</con:name><con:contentType>application/octet-stream</con:contentType><con:size>27823</con:size><con:contentId>1234</con:contentId><con:part>1234</con:part><con:data></con:data><con:id>5ef2fed2-6aea-473f-98a2-53ba3d012fa4</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="f7f0b896-c84f-4f38-a8ba-0c823f74129d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS050-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload1 = pay1.getBytes();
messageMap.setBytes("payload_1", payload1);

messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment");
messageMap.setStringProperty("payload_2_mimeType", "application/pdf");
messageMap.setStringProperty("payload_2_description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);

/*messageMap.setStringProperty("payload_3-mimeContentId", "cid:message");
messageMap.setStringProperty("payload_3-mimeType", "text/xml");
messageMap.setStringProperty("payload_3-description", "message");
String pay3 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload3 = pay3.getBytes();
messageMap.setBytes("payload_3", payload3);*/

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="bc4d8749-e66b-454d-ad85-b012c03066b6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS050-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS050-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS051-Submit message-Tab and spaces" searchProperties="true" id="4379459a-54e1-4be3-b3c6-64d078d8b2bd">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="request" name="Submit Message1" id="cefdda51-0224-4d64-92ec-052b924a7e2b" disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Submit Message1" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/domibus/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId> -Dom088-</ns:MessageId>
               <ns:RefToMessageId>12349999	</ns:RefToMessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">	domibus-blue</ns:PartyId>
                  <ns:Role> http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1"> bdx:noprocess	</ns:Service>
               <ns:Action>	TC1Leg1 </ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">		urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">    urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml </ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c8a24d36-ed80-46f7-90dd-1c94f468ce2d" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context,'${#Project#jdbcUrl1}','${#Project#jdbcUrl2}','${#Project#driver}');
test.verifyMessageStatus("ACKNOWLEDGED","RECEIVED");
test.finalize();</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="33832f77-c6c3-4d6e-945d-a35dc2481c52"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", " bdx:noprocess	");
messageMap.setStringProperty("serviceType", "  tc1");
messageMap.setStringProperty("action", "TC1Leg1		");
messageMap.setStringProperty("fromPartyId", "	domibus-blue ");
messageMap.setStringProperty("fromPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	");
messageMap.setStringProperty("toPartyId", "   domibus-red ");
messageMap.setStringProperty("toPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	");
messageMap.setStringProperty("fromRole", " http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator ");
messageMap.setStringProperty("toRole", "	http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder	");
messageMap.setStringProperty("originalSender", " urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1   ");
messageMap.setStringProperty("finalRecipient", "		urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS051-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "	cid:message	");
messageMap.setStringProperty("payload_1_mimeType", "	text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7c20e99e-e3e0-4b3b-b32c-39db59de614a"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS051-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS051-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1296a5b0-a2bc-4847-9b70-f896c3bc1ce2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="70fb57c1-3cd1-451e-af52-33a3a0f5643d" name="PASSING TCs - Not for Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS003-Submit Message-Exceptional flow-No receipt" searchProperties="true" id="75c0c0e0-d072-4073-babd-bb5eca6ed771">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="a3e8aa50-4124-43f9-bfdc-296183e6c303"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="e4dc722a-da83-4d6d-9cf8-262dc58f0585"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS003-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="d96c0d09-2b87-4cfa-a0dc-f96081c863ec"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS003-");
test.verifyMessagePresence(1,0,"-DomJMS003-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS003-");
test.finalize();
Domibus.startMSH("receiver", context, log)
ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4dc722a-da83-4d6d-9cf8-262dc58f0585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d96c0d09-2b87-4cfa-a0dc-f96081c863ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS004-Submit message-Exceptional flow-retry max not reached" searchProperties="true" id="6b3f4d9a-d4a1-4098-955d-5d8e118ddd42">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="dbc5fbb2-611e-432f-ba1b-aeeee66ff3a8"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="b20f9492-37a1-4992-a2ae-5d336a40247b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="9c6f08d0-5ce3-4757-b59f-44bb1b1640b3"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS004-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0a2b3efa-6626-42cd-bf6a-1b83dd688944"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS004-")
test.verifyMessagePresence(1,0,"-DomJMS004-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Start Receiver MSH" id="33b4edde-df66-466f-8381-572fe3531b14"><con:settings/><con:config><script>Domibus.startMSH("receiver", context, log)</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="87ea9d93-446f-46d0-aaa7-7a0f4209344c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="490409fd-9d66-4c7c-8005-c4014f3f48cd"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS004-","Long");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS004-")
test.finalize()
Domibus.startMSH("receiver", context, log)
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c6f08d0-5ce3-4757-b59f-44bb1b1640b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a2b3efa-6626-42cd-bf6a-1b83dd688944</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="f82daf4e-2db1-40ac-8e6c-5e5d519cf0c0" name="PASSING TCs - Manual TCs"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS052-Test Experience-Truststore Update" searchProperties="true" id="df357ddb-7ba4-486c-a693-783fe586e0a5">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="httprequest" name="Put wrong truststore" id="be616d3c-944f-4e32-a0d2-21921d9fd18f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="Put wrong truststore" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e4604d4b-7e98-4621-89f0-a412aa38c723" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c88bcac2-185f-4d9e-9c3d-17e0f66703d7" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#specialPModesPath}/DynamicDiscovery/Sender/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Restart Domibus Sender" id="cd8b9098-8fbd-42a9-8eb7-67404b5f59dd"><con:settings/><con:config><script>Domibus.stopMSH("sender",context, log);

Domibus.startMSH("sender",context, log);

log.info "--DONE--";</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="e138bc36-5999-4555-b848-c445b16888f9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS052-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e97f82e7-7d63-4602-a5af-e5b9d0a674a4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,0,"-DomJMS052-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="httprequest" name="restore truststore" id="bed6d5e9-a752-4924-85f2-7d968b646bac"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="61ffe2a5-f284-4dec-b84a-9a82c84c99b1" name="restore truststore" postQueryString="false" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#localUrl}/home/uploadTruststoreFile</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e4604d4b-7e98-4621-89f0-a412aa38c723" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c88bcac2-185f-4d9e-9c3d-17e0f66703d7" name="Contains"><con:configuration><token>Truststore file has been successfully replaced</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>gateway_truststore.jks</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>truststore</con:contentId><con:part xsi:nil="true"/><con:url>${#Project#defaultPModesPath}/blue/gateway_truststore.jks</con:url><con:id>84332a2d-17ce-4a76-aced-0c1a597eba74</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>test123</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="b0129e45-36e6-4d3e-8293-1bda0a47e0f7"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS052-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test good truststore" id="46ca4d4e-1b9b-40fc-8124-6c4d4a937579"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS052-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS052-");
test.finalize();
Domibus.startMSH("sender", context, log)
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bed6d5e9-a752-4924-85f2-7d968b646bac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS054-Manual-EDELIVERY-1684-Message Id should always be present in the messages sent" searchProperties="true" id="823c4d03-ce45-4691-8c98-cad72b29239e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="d9aa8bb3-f41f-491b-9497-49f6152b3790"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS054-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="5b5dcdb9-3385-4bd5-8a7b-94cc170b8f02"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS054-"); // intentionally send second message with same ID the messgae should end in [internal] domibus.DLQ queue

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test msg present" id="38fa4dff-3e50-4a99-a357-1119b99890b4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS054-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Check if messageID property can be found in JMS queues" id="17cf3adf-7e50-41b7-91c1-14cfeaf3fb37"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""\
Intentionally send second message with the same messageID.
Check on Domibus - JMS Monitoring page that error message with messageID can be found in:
- [internal] domibus.backend.jms.replyQueue JMS queue at first 
- and in [internal] domibus.DLQ JMS queue after the retry limit is reached.
"""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS054-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS055-Manual-EDELIVERY-1706-JMS Monitoring: empty messages are not displayed" searchProperties="true" id="573a0dc2-c0ae-4724-ada9-b0c7b941b121">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="f1f60f19-e285-452c-ba88-5ba6a67751e8"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.DLQ");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
 
Message request = session.createTextMessage(null);
 
log.info "Sending Text message with empty (null) text message"
producer.send(request);
log.info "Text message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check if messageID property can be found in JMS queues" id="470eace6-21d5-4578-9fda-fc1981095f34"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""\
In previous step intentionally empty text message was send to Dead Letter Queue.
Check on Domibus - JMS Monitoring page that message is present in:
[internal] domibus.DLQ JMS queue of Sender.
"""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="92cdd1dd-669c-41c8-969d-4702e283d852" name="Retention issue" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS005-Submit message-Exceptional flow-retry max reached" searchProperties="true" id="62e60887-cc30-4213-abe8-7def79055d30">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="4e0ce318-64f8-4072-916a-8553dce2b973"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="a2dbe87e-a229-4a32-b1a5-2421a171d9ef"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="c189cf14-cd7d-41a8-81fe-3e1d4e5c28fa"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS005-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="bc00ae7a-2d2a-4e11-90d4-ae07623d92ea"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS005-");
test.verifyMessagePresence(1,0,"-DomJMS005-");
test.finalize();</script></con:config></con:testStep><con:testStep type="request" name="Submit Message1" id="995ed4ca-da45-454b-9202-7608c7374f64" disabled="true">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>sendMessage</con:operation>
                    <con:request name="Submit Message1" id="7dc400ff-4173-4c4b-9146-54bd15cee994">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/domibus/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-Dom005-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:sendRequest>
         <payload payloadId="cid:message">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</payload>
      </_1:sendRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3a65a26d-664a-40b6-9237-8cfd66c7c2db"/><con:assertion type="SOAP Fault Assertion" id="d3b2a875-2c73-4b67-a8c8-f45848cb70da" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="f0667722-516b-4a0c-ba90-e95409275f02" name="XPath Match"><con:configuration><path>exists(//messageID)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c8a24d36-ed80-46f7-90dd-1c94f468ce2d" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context,'${#Project#jdbcUrl1}','${#Project#jdbcUrl2}','${#Project#driver}');
test.waitForStatus("WAITING_FOR_RETRY",null);
test.verifyMessagePresence(1,0);
test.finalize();</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="D2" id="448e8a67-111e-48c9-aec0-7a5e8b965976"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="bd0a2320-4d1c-4cb1-97ea-933fc4c02c98"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE",null,"-DomJMS005-","Long");
test.verifyMessagePresence(1,0,"-DomJMS005-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>Domibus.startMSH("receiver", context, log)

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c189cf14-cd7d-41a8-81fe-3e1d4e5c28fa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc00ae7a-2d2a-4e11-90d4-ae07623d92ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="e653ca68-8ae3-40f3-9908-0dfd9f28cc74" name="EDELIVERY-1388 - Differences in message parameters JMS and WS plugins" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS014-Submit Message-serviceType-Optional-service untyped" searchProperties="true" id="a3b4872d-e2e5-4fb4-ab66-a36044f99b43">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="04452c85-4a3a-4673-8221-e94f6b3aaf2f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS014-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c6af36cd-1644-43b4-9b03-a8b8f788490e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS014-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS014-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS020-Submit Message-agreementRef-Optional" searchProperties="true" id="a71907e4-a690-4943-a89d-0cead23fa379">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="221f12dd-294f-497d-8c34-05ca848faa25"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc8");
messageMap.setStringProperty("action", "TC8Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-1-");
messageMap.setStringProperty("agreementRef", "agreementForDomJMS020Value");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="61b4d9bb-4e84-41fc-8693-38ddde563805"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc8");
messageMap.setStringProperty("action", "TC8Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-2-eee");



messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8b66d325-d6f1-4e0f-bac9-0933ffb9c8a4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS020-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS020-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS020-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS023-Submit Message-agreementRefType" searchProperties="true" id="6534c72f-d7b7-439d-9ba5-b4a936f6ce37">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="4ff13b81-4b1a-4bd6-98a1-39a4d7dc6ad0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc9");
messageMap.setStringProperty("action", "TC9Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-1-");
messageMap.setStringProperty("agreementRef", "agreementForDomJMS023Value");
messageMap.setStringProperty("agreementRefType", "random");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="51f172b0-1579-4e33-8238-4f8fcde52724"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-2-");
messageMap.setStringProperty("agreementRefType", "useless");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="9607393a-71fc-4c74-9f17-ef24aea77795"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS023-1-");
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS023-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS023-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS043-Submit Message-protocol-Optional" searchProperties="true" id="2484195b-519f-43c8-9841-1441c62ae578">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="133bbc9d-4fa6-423a-a2c9-39c34bbdc1a0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
//messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="32e385b5-7edd-460c-a9f8-ccbcc959cdb1"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="99884ca6-6750-4fc8-b686-65d6f4a7ad94"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 4" id="961097d1-6119-41d1-b47d-e81ac893b45e"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS2");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-4-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="5dc8531c-c0c6-4045-bfa2-022ac93b6024"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS043-1-");
test.verifyMessagePresence(1,1,"-DomJMS043-2-");
test.verifyMessagePresence(0,0,"-DomJMS043-3-");
test.verifyMessagePresence(0,0,"-DomJMS043-4-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS043-1-");
test.cleanDBMessageID("-DomJMS043-2-");
test.cleanDBMessageID("-DomJMS043-3-");
test.cleanDBMessageID("-DomJMS043-4-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS040-Submit Message-JMScorrelationId" searchProperties="true" id="cc2bd7ec-f5c6-4491-8d00-15fc503c31c5">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="4b96b77d-27fd-4568-8e06-a880c8a31988"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-");
messageMap.setStringProperty("JMScorrelationId", "-DomJMS040-JMScorrelationId-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Submit Message" id="7f5c68cc-4de3-4f4f-a10e-c6126196c79d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7a4ef157-531c-4b89-8552-affa31098d88"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS040-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Test replyQueue" id="3ef6c6b6-6ed8-432c-a5bd-652673625532"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Browse the replyQueue to look for a message with parameter\nJMScorrelationId = \"-DomJMS040-\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS040-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS045-Submit Message-totalNumberOfPayloads-0" searchProperties="true" id="d6eacb5b-ea34-467b-8656-6af30d2b5d3a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="a83b2b80-1a9d-4051-8f5c-9a5e40e1be1d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "0");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="7b7f94d6-a300-4488-bc14-254e5dd7cefa"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "0");
//messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
//messageMap.setStringProperty("payload_1_mimeType", "text/xml");
//messageMap.setStringProperty("payload_1_description", "message");
//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
//byte[] payload = pay1.getBytes();
//messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="63c8536c-d591-4e27-97a2-d0e0e833ad80"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS045-1-");
test.verifyMessagePresence(1,1,"-DomJMS045-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS045-1-");
test.cleanDBMessageID("-DomJMS045-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS046-Submit Message-P1InBody-Optional" searchProperties="true" id="c47b8741-90d5-4c93-acca-a0ab6a552457">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file 1" id="b2f3cd3a-0dcd-4a96-bd04-ce3242432770"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Update P1InBody value (set line to P1InBody = true) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); 
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="374ee895-1fb6-435d-8106-37ace52f2755"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="b716cb5e-a59e-4e27-87eb-33e933d748c5"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "application/octet-stream");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test P1InBody true" id="25bfcdfb-0e49-444f-98b4-15b1acaa514b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-1-");
test.verifyMessagePresence(0,0,"-DomJMS046-2-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Update Default properties file 2" id="230c268d-d43f-41c8-bde9-41068936c667"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Comment P1InBody value (set line to #P1InBody = false) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); </script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="30045746-ec87-4d22-b41e-5b0fab16fccd"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test P1InBody commented" id="d461fe80-cb0a-4827-9cd7-fe3f44322cc8"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-3-");
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Update Default properties file 3" id="1de195c0-a649-4eb4-bf92-90229ef44b7c"><con:settings/><con:config><script>DomibusUtils.showPopUpForManualConfigurationChange("""
Update P1InBody value (set line to P1InBody = false) in Sender and Receiver config files (jms-business-defaults.properties), remeber to restart both"""
, log, testRunner); 
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 4" id="ef797b9a-5e4c-4aa5-8885-33701329e37b"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS046-4-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f907af55-cdac-44d0-8e44-a13a73e84e42"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS046-4-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS046-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b716cb5e-a59e-4e27-87eb-33e933d748c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS047-Submit Message-payload_Description" searchProperties="true" id="5ff64e41-2dc8-49f0-bc88-b42aca061f6d">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="50ed5561-94dc-41fa-a7d8-d3e943aa0ec3"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "Random Description");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="e51e438a-c563-46a9-a07d-cc69709a0291"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="7009247c-334b-4900-96ce-ce3d24549fad"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS047-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
//messageMap.setStringProperty("payload_1_description", "");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="ff2f765e-b10d-4733-9714-51a8c886d16f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS047-1-");
test.verifyMessagePresence(1,1,"-DomJMS047-2-");
test.verifyMessagePresence(1,1,"-DomJMS047-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS047-1-");
test.cleanDBMessageID("-DomJMS047-2-");
test.cleanDBMessageID("-DomJMS047-3-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS049-Submit Message-MimeType" searchProperties="true" id="f5c502b0-7064-4e5e-8970-93579562532a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="request" name="Test Request" id="b80a6bc4-0553-4c48-b85e-d002fffcc0ab" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>downloadMessage</con:operation><con:request name="Test Request" id="ec41df46-973c-40c5-b007-3a494ca7065e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/backend</con:endpoint><con:request/><con:assertion type="SOAP Response" id="1f451541-9b7f-470a-a1e8-1fef90dee8d2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="b3f56c6b-465e-433b-985b-67cb6b67deac"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");

// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-1-");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message" id="4ada5e10-3044-4206-849d-d82681db0c51"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to "text/xml".
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[1]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">text/xml&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="60eb6c5a-8de5-4f57-82aa-f32f1eacb64d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);
messageMap.setStringProperty("payload_2-mimeContentId", "cid:attachment");
messageMap.setStringProperty("payload_2-mimeType", "application/pdf");
messageMap.setStringProperty("payload_2-description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);


log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message application/pdf" id="79d16b81-f2af-42dc-bac7-9f612c89790c"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to "application/pdf".
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[2]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">application/pdf&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="52dd034a-dca1-4033-a481-8916dfe2f628"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-3-");


messageMap.setStringProperty("totalNumberOfPayloads", "2");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);
messageMap.setStringProperty("payload_2-mimeContentId", "cid:attachment");
//messageMap.setStringProperty("payload_2-mimeType", "application/pdf");
messageMap.setStringProperty("payload_2-description", "message");
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes();
messageMap.setBytes("payload_2", payload2);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Check AS4 message when mime/type not provided" id="6164c7d4-d54a-4386-a077-9c8ecc7be02b"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""
Check that the mime type in AS4 message is set to deafult value "application/octet-stream" as described in ICD.
Go to Sender log (domibus.log) find the lates AS4 message and check inside value for
//eb:Messagingeb:UserMessage/eb:PayloadInfo/eb:PartInfo[2]/eb:PartProperties/
is:
&lt;eb:Property name="MimeType">application/octet-stream&lt;/eb:Property>.
"""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0ad14c70-49c0-4325-a766-363df4d6eef6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS049-1-");
test.verifyMessagePresence(1,1,"-DomJMS049-2-");
test.verifyMessagePresence(1,1,"-DomJMS049-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS049-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79d16b81-f2af-42dc-bac7-9f612c89790c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6164c7d4-d54a-4386-a077-9c8ecc7be02b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="cb8cdf38-6b66-4692-87f6-f87b076a553b" name="EDELIVERY-XXXX - Role not mandatory because od dynamical discovery" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS028-Submit Message-toRole-Mandatory" searchProperties="true" id="eaf9af88-7035-4343-9f9f-abde5261cef1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="b54e5866-57eb-4836-b8ac-765e022374db"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS028-1-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="63612d85-24e7-4ea9-8396-03529f7e49f2"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS028-2-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="194f6818-5c18-46d4-b2ca-b015756fb4cb"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS028-1-");
test.verifyMessagePresence(1,1,"-DomJMS028-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS028-1-");
test.cleanDBMessageID("-DomJMS028-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="55753d1d-1880-4d33-a04a-5508cf33552c" name="Already disabled TCs" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS010-Submit Message-action-Unicity" searchProperties="true" id="ac5a9a8e-ed9d-4882-897a-2e65de77d811" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="073502fb-b067-45ab-aa82-60b34e198caa"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS010-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a670b8d8-4e51-4f7f-8d8f-eed29762cf63"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS009-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS010-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS019-Submit Message-refToMessageId-Unicity" searchProperties="true" id="2f2d8438-1ce7-4305-8960-ef1430019f0a" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="a04f1794-5d37-4d26-aa00-cf81a2065c72"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-1-");
//messageMap.setStringProperty("conversationId", "123");
//messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="628af4a7-5ceb-488d-94c1-876aff9653e0"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-2-");
//messageMap.setStringProperty("conversationId", "123");
messageMap.setStringProperty("refToMessageId", "-DomJMS018-1-");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="e094b6d9-2162-4039-8077-71491aab0b6e"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS019-3-");
//messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2cd65051-c67e-4040-b9a3-bde3d50f61ba"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS019-1-");
test.verifyMessagePresence(1,1,"-DomJMS019-2-");
test.verifyMessagePresence(1,1,"-DomJMS019-3-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS019-1-")
test.finalize()
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS022-Submit Message-agreementRef-Unicity" searchProperties="true" id="419dd011-afd2-4220-8396-ca8e9e714c87" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="3e0c46a3-82a9-406d-8e16-c6cf07d17eb8"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS022-");
messageMap.setStringProperty("agreementRef", "messageAgreementRef");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="669b215d-63dd-4e0f-80ad-04b1fcbf5e88"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS022-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS022-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS027-Submit Message-fromRole-Unicity" searchProperties="true" id="c69e8042-4ab6-45b8-a0bc-a7b4962b0d8c" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="30363808-c681-4183-8929-cec1ffca9bd1"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS027-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="5a4f857e-9def-466e-a257-81aea5c676f1"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS027-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS027-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS031-Submit Message-toRole-Unicity" searchProperties="true" id="2cac55fe-82c6-48ed-bd1f-08abc8046dfa" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="26cf551c-6fc0-4366-9fe9-46a3a0e96664"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS031-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1a77ac42-de02-41a8-8a87-97dd5bcea8a9"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS031-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS031-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS041-Submit Message-originalSender-Optional" searchProperties="true" id="6e23adae-7755-43cc-bb04-033612d16b56" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="ab39f32b-5c5b-4f5c-8156-158512cff8eb"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
//messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS041-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="17181449-3631-45fb-b47e-1c72b8d23aad"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS041-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="934d3629-ffd8-4492-aa10-1f70b844819f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS041-1-");
test.verifyMessagePresence(1,1,"-DomJMS041-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS041-1-");
test.cleanDBMessageID("-DomJMS041-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS042-Submit Message-finalRecipient-Optional" searchProperties="true" id="7a969276-2be0-4f12-b9b9-fe3dfee53931" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="75b5d404-56ec-479b-913a-eca9d3816b5f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
//messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS042-1-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="b6a4a515-182c-4457-bf68-fe8910ff319d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS042-2-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="60ea5932-8f75-47a8-a295-b28fdba1d0b6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS042-1-");
test.verifyMessagePresence(1,1,"-DomJMS042-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS042-1-");
test.cleanDBMessageID("-DomJMS042-2-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS053-Test Experience-Heavy Logs" searchProperties="true" id="a70f5dbc-b4e7-42d4-bcb2-33d03f03e5c6" disabled="true">
            <con:settings/>
            <con:testStep type="groovy" name="Start a load test" id="7c22c1e0-09ec-426b-95b1-973d31fb657d"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

def int i = 0;
while (i&lt;601){
	messageMap.setStringProperty("messageId", "-DomJMS053-"+i+"-");
	log.info "sending message";
	producer.send(messageMap);
	log.info "message sent";
	i=i+1;
	sleep(1000);
}

connection.close();</script></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Test" id="2c35fd83-f603-4585-94ed-29800a1e4fc4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def int i = 0;
while (i&lt;201){
	test.verifyMessagePresence(1,1,"-DomJMS053-"+i+"-");
	i=i+1;
}
test.finalize();</script></con:config></con:testStep><con:testStep type="groovy" name="Check log file" id="315fe165-1010-43ee-ad05-858073f469c7"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Monitor the log file to check that its size did not increase widely."); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDatabaseAll();
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46a821e6-6caf-43f3-8f1e-fc16fd2acf61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>72f090b9-c1df-403b-be48-8ef3c9ecf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ac680a1-b718-48cb-9143-8f9d5f804428</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3b40bbed-e32e-4914-9233-835456ba5072</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4fc8565-27c9-4dcc-b3fb-4d74a19e13f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61b4d9bb-4e84-41fc-8693-38ddde563805</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>51f172b0-1579-4e33-8238-4f8fcde52724</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>191f2293-f259-4f91-b2f9-0ebb192b4853</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ceb3fbad-5f2d-4f54-b224-2fe362d97e90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ef6c6b6-6ed8-432c-a5bd-652673625532</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>17181449-3631-45fb-b47e-1c72b8d23aad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99884ca6-6750-4fc8-b686-65d6f4a7ad94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>961097d1-6119-41d1-b47d-e81ac893b45e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2f3cd3a-0dcd-4a96-bd04-ce3242432770</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de195c0-a649-4eb4-bf92-90229ef44b7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ef797b9a-5e4c-4aa5-8885-33701329e37b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>230c268d-d43f-41c8-bde9-41068936c667</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e51e438a-c563-46a9-a07d-cc69709a0291</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7009247c-334b-4900-96ce-ce3d24549fad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4ada5e10-3044-4206-849d-d82681db0c51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="3fe42b20-3f25-4edb-bfa8-b92fb44838b2" name="EDELIVERY-1386 - FallBack issue" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS011-Submit Message-action-FallBack" searchProperties="true" id="e449326b-0136-4276-ad0a-2424091814cb">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="72f090b9-c1df-403b-be48-8ef3c9ecf20d"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAction = \"TC1Leg1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="84a8904a-c0fd-43e8-b7f5-ac968dc64269"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
//messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS011-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="897d745f-277f-4ec0-aedc-349d62613bee"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS011-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS011-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS013-Submit Message-Service-FallBack" searchProperties="true" id="4d356589-555c-4961-b57e-05238a4cc4bf">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="906220c2-8277-4fcb-a3bd-f15306888b25"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n Service = \"bdx:noprocess\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="13f02d7e-5b1f-4cf0-9907-e5b263170dc4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
//messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS013-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1e085647-c118-47af-a15e-a7b13763ee54"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS013-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS013-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS016-Submit Message-serviceType-FallBack-service typed" searchProperties="true" id="06a13097-9d2e-406a-a3ca-5327fe4f8251">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7ac680a1-b718-48cb-9143-8f9d5f804428"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n serviceType = \"tc1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="20080bd1-0b33-439d-9e24-6705a5375f75"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
//messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS016-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="3598dddf-43ad-4688-bb70-52f014d7fd24"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS016-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS016-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS021-Submit Message-agreementRef-FallBack" searchProperties="true" id="91f29f42-29ba-4db6-971d-44d6ac62d0de">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="53c0a958-b619-493b-b45b-7b9d7ecf4e43"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAgreementRef = \"backUpAgreementRef\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="f0b008b2-e122-4a68-901e-f0ed015a56f4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS021-");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8079c92b-aa08-4e0b-b199-8c77a6f5edfc"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS021-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS021-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS026-Submit Message-fromRole-FallBack" searchProperties="true" id="2fa15332-6081-42d2-b715-31d372e603a9">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="39528860-d05b-4e06-963c-ab716f1edcbc"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="655049bc-7954-402b-aca8-1e6e5fd1d0df"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS026-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="791d9681-0e7e-4866-8b86-fdca1590b093"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS026-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS026-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS030-Submit Message-toRole-FallBack" searchProperties="true" id="48c95389-5b0e-486e-b65f-1dc8e97b4445">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="191f2293-f259-4f91-b2f9-0ebb192b4853"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4c45406d-2a0d-4ac8-a109-88feded44a45"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS030-");
// messageMap.setStringProperty("conversationId", "123");
// messageMap.setStringProperty("refToMessageId", "11");
 

// messageMap.setJMSCorrelationID("12345");

messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1343362f-f6ca-4a6a-a9e3-5d8114a62628"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS030-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS030-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39528860-d05b-4e06-963c-ab716f1edcbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS033-Submit Message-fromPartyId-fallBack" searchProperties="true" id="94cb630b-3001-413b-838a-453f88de7cac">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="ceb3fbad-5f2d-4f54-b224-2fe362d97e90"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyID = \"domibus-blue\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="1cdf2aea-d972-49dd-a89c-4718f70adf18"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
//messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS033-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c47bc925-c3de-426c-9569-1d036895358e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS033-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS033-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS035-Submit Message-fromPartyType-fallBack" searchProperties="true" id="167baf2c-1905-49c6-a3b1-eea7703c738a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="9357329a-fc5b-4873-8656-7d1a74fd299e"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="98a67e92-919a-4dff-b8d0-8abb88625b2f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS035-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="81d56a4a-71c1-4835-acb4-265ee6e1a03e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS035-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS035-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2c35fd83-f603-4585-94ed-29800a1e4fc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS037-Submit Message-toPartyId-fallBack" searchProperties="true" id="bb050160-23a5-4c69-abad-d29f337d83a6">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="3248bdaf-ac92-4470-b294-5edb209385df"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyID = \"domibus-red\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d1a02761-d557-40c1-adae-9c27391cc1f9"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
//messageMap.setStringProperty("toPartyId", "domibus-red");
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS037-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2c68ece8-6846-4ede-8de0-0ec963e6824d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS037-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS037-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS039-Submit Message-toPartyType-fallBack" searchProperties="true" id="8273a842-f819-4ff0-a5ed-92c267ca4506">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="d5a4e6dd-afe3-477e-b464-3ac2f1b8115f"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="2faa7b97-8a50-4b49-9ebb-e0b97adc517f"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616");
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue("domibus.backend.jms.inQueue");
producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
MapMessage messageMap = session.createMapMessage();

messageMap.setStringProperty("messageType", "submitMessage");
messageMap.setStringProperty("service", "bdx:noprocess");
messageMap.setStringProperty("serviceType", "tc10");
messageMap.setStringProperty("action", "TC10Leg1");
messageMap.setStringProperty("fromPartyId", "domibus-blue");
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("toPartyId", "domibus-red");
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator");
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder");
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4");
messageMap.setStringProperty("protocol", "AS4");


// Optional
messageMap.setStringProperty("messageId", "-DomJMS039-");


messageMap.setStringProperty("totalNumberOfPayloads", "1");
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message");
messageMap.setStringProperty("payload_1_mimeType", "text/xml");
messageMap.setStringProperty("payload_1_description", "message");
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes();
messageMap.setBytes("payload_1", payload);

log.info "sending message"
producer.send(messageMap);
log.info "message sent"

connection.close();</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0a56e196-6b5f-4fff-a5f1-d24bf7fb6fd4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS039-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS039-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>localUrl</con:name><con:value>http://localhost:8080/domibus</con:value></con:property><con:property><con:name>remoteUrl</con:name><con:value>http://localhost:8180/domibus</con:value></con:property><con:property><con:name>pathExeSender</con:name><con:value>c:/domibus/sender/domibus/bin/</con:value></con:property><con:property><con:name>pathExeReceiver</con:name><con:value>c:/domibus/receiver/domibus/bin/</con:value></con:property><con:property><con:name>updateReport</con:name><con:value>true</con:value></con:property><con:property><con:name>databaseBlue</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverBlue</con:name><con:value>com.mysql.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlBlue</con:name><con:value>jdbc:mysql://localhost:3306/domibus_blue</con:value></con:property><con:property><con:name>blueDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>blueDbPassword</con:name><con:value>adminroot</con:value></con:property><con:property><con:name>databaseRed</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverRed</con:name><con:value>com.mysql.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlRed</con:name><con:value>jdbc:mysql://localhost:3306/domibus_red</con:value></con:property><con:property><con:name>redDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>redDbPassword</con:name><con:value>adminroot</con:value></con:property><con:property><con:name>pathExeGreen</con:name><con:value>c:/domibus/greenReceiver/domibus/bin/</con:value></con:property><con:property><con:name>jdbcUrl3</con:name><con:value>jdbc:mysql://localhost:3306/domibus_green</con:value></con:property><con:property><con:name>greenUrl</con:name><con:value>http://localhost:8280</con:value></con:property><con:property><con:name>reportFilePath</con:name><con:value>${projectDir}\\reports\\Domibus_3_2_5_test_results.xlsx</con:value></con:property><con:property><con:name>pdfAttachment</con:name><con:value>C:/SoapUIProjects/sampleFiles/fileSmall.pdf</con:value></con:property><con:property><con:name>specialPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresSpecialTests</con:value></con:property><con:property><con:name>defaultPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresDefault</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>